version: "3.8"
services:
  db:
    container_name: pg_container
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 3

  cache:
    container_name: redis_container
    image: redis:8.2-rc1-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - cache:/data
    networks:
      - app-network


#
#  pgAdmin:
#    container_name: pgadmin4_container
#    image: dpage/pgadmin4:9.2
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@gmail.ru
#      PGADMIN_DEFAULT_PASSWORD: root
#    ports:
#      - "5000:80"
#    depends_on:
#      - db
#    networks:
#      - app-network

  api:
    build: ./backend
    env_file:
      - ./backend/.env.docker
    container_name: api_container
    ports:
      - '4001:4000'
    environment:
      - DB_HOST=db
      - DB_USER=admin
      - DB_PASSWORD=admin
      - DB_NAME=postgres
      - DB_PORT=5432
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
#    volumes:
#      - ./backend:/app
#      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    networks:
      - app-network
    develop:
      watch:
        - action: sync+restart
          path: ./backend/src
          target: /app/src
          ignore:
            - node_modules
            - .git
            - .idea
volumes:
  postgres_data:
    name: postgres_data
  cache:
    driver: local

networks:
  app-network:
    driver: bridge